load_lib vomstest.exp
testheader "Can AC validity be limited?"

proc mytest {} {
    _activateCert mycert2

    _vomsStart voms1
    set res [log_exec outname {voms-proxy-init --voms voms1 --vomslife 5:00}]
    _vomsStop voms1

    if $res then {
        addlog $outname
        testmessage "voms-proxy-init failed."
        return $::FAILTEST
    }

    set res [log_exec outname {voms-proxy-info --all}]

    if $res then {
        addlog $outname
        testmessage "voms-proxy-info failed."
        return $::FAILTEST
    } else {
        #match against known (correct) output
        set correct "subject   : /C=IT/CN=001/CN=proxy
issuer    : /C=IT/CN=001
identity  : /C=IT/CN=001
type      : proxy
strength  : 2048 bits
path      : /tmp/x509up_u\[0-9\]*
timeleft  : \(\[0-9\]*\):\[0-9\]*:\[0-9\]*
key usage : Digital Signature, Key Encipherment
=== VO voms1 extension information ===
VO        : voms1
subject   : /C=IT/CN=001
issuer    : /C=IT/CN=003
attribute : /voms1
attribute : /voms1/group1
attribute : shortid = mycert2-g \\\(/voms1/group1\\\)
attribute : shortid = mycert2 \\\(voms1\\\)
timeleft  : \(\[0-9\]*\):\[0-9\]*:\[0-9\]*"
        loadvar out2 $outname
        set PLENGTH ""
        set ACLENGTH ""
        if [regexp $correct $out2 dummy PLENGTH ACLENGTH] then {
            if [ expr {(( $PLENGTH == "12" || $PLENGTH == "11" )) && (( $ACLENGTH == "4" || $ACLENGTH == "5" ))} ] then {
                testmessage "voms-proxy-init --vomslife xx:yy worked successfully."
                return $::PASSTEST
            } else {
                addlog $outname
                testmessage "voms-proxy-init --vomslife xx:yy did not work correctly."
                return $::FAILTEST
            }   
        } else {
            logvar correct
            addlog $outname 
            testmessage "Unexpected output in voms-proxy-info"
            return $::FAILTEST
        }
    }
}

do_test