load_lib vomstest.exp
testheader "See if voms-proxy-fake --voinfo segfaults when --uri is absent."

proc mytest {} {
    _activateCert mycert2
    _cleanproxy

    set outinfo [exec mktemp $::SCRATCHDIR/vo-info-XXXXXX]
    set id [open $outinfo "w+"]
    puts $id "\[voms1\]"
    puts $id "-hostcert = $::INSTALLDIR/certs/hostcert.pem"
    puts $id "-hostkey = $::INSTALLDIR/certs/hostkey.pem"
    close $id
    set res [log_exec outname {voms-proxy-fake --voinfo $outinfo}]

    if $res then {
        addlog $outname
        addlog $outinfo
        testmessage "voms-proxy-fake failed."
        return $::FAILTEST
    }

    if [log_exec outname {voms-proxy-info -all}] then {
        addlog $outname
        addlog $outinfo
        testmessage "voms-proxy-info failed."
        return $::FAILTEST
    }

        set correct "subject   : /C=IT/CN=001/CN=proxy
issuer    : /C=IT/CN=001
identity  : /C=IT/CN=001
type      : proxy
strength  : 2048 bits
path      : /tmp/x509up_u\[0-9\]*
timeleft  : \[0-9\]*:\[0-9\]*:\[0-9\]*
key usage : Digital Signature, Key Encipherment
=== VO voms1 extension information ===
VO        : voms1
subject   : /C=IT/CN=001
issuer    : /C=IT/CN=003
timeleft  : \[0-9\]*:\[0-9\]*:\[0-9\]*
uri       :"

    loadvar out2 $outname

    if [regexp $correct $out2] then {
        testmessage "File voinfo read correctly"
        return $::PASSTEST
    }

    logvar correct
    addlog $outname

    testmessage "proxy and specification in voinfo do not match"
    return $::FAILTEST
}

do_test
